@import "variables";
@mixin layout($breakpoint: '') {
     @if ($breakpoint != ''){
        $breakpoint: '-#{$breakpoint}';
    }

    .layout#{$breakpoint}-h,
    .layout#{$breakpoint}-v {
        display: flex;
        //in main axis
        // justify-content: flex-start;
        //cross main axis
        // align-items: flex-start;
        //how to align when content is wrapped
        // align-content: flex-start;
        &.layout#{$breakpoint}-wrap {
            flex-wrap: wrap;
        }

        &.layout#{$breakpoint}-margin {
            margin: $defaultMarginPadding;

            > * {
                margin: $defaultMarginPadding;
            }
        }

        &.layout#{$breakpoint}-padding {
            padding: $defaultMarginPadding;

            > * {
                padding: $defaultMarginPadding;
            }
        }

        &.layout#{$breakpoint}-fill {
            margin: 0;
            width: 100%;
            min-height: 100%;
        }

        &.align#{$breakpoint}-wrap-start {
            align-content: flex-start;
        }

        &.align#{$breakpoint}-wrap-center {
            align-content: center;
        }

        &.align#{$breakpoint}-wrap-end {
            align-content: flex-end;
        }

        &.align#{$breakpoint}-wrap-space-around {
            align-content: space-around;
        }

        &.align#{$breakpoint}-wrap-space-between {
            align-content: space-between;
        }

        &.align#{$breakpoint}-wrap-stretch {
            align-content: stretch;
        }
    }

    .layout#{$breakpoint}-v {
        flex-direction: column;

        &.align#{$breakpoint}-h-start {
            align-items: flex-start;
        }

        &.align#{$breakpoint}-h-center {
            align-items: center;
        }

        &.align#{$breakpoint}-h-end {
            align-items: flex-end;
        }

        &.align#{$breakpoint}-h-stretch {
            align-items: stretch;
        }

        &.align#{$breakpoint}-v-start {
            justify-content: flex-start;
        }

        &.align#{$breakpoint}-v-center {
            justify-content: center;
        }

        &.align#{$breakpoint}-v-end {
            justify-content: flex-end;
        }

        &.align#{$breakpoint}-v-space-around {
            justify-content: space-around;
        }

        &.align#{$breakpoint}-v-space-between {
            justify-content: space-between;
        }
    }

    .layout#{$breakpoint}-h {
        flex-direction: row;

        &.align#{$breakpoint}-h-start {
            justify-content: flex-start;
        }

        &.align#{$breakpoint}-h-center {
            justify-content: center;
        }

        &.align#{$breakpoint}-h-end {
            justify-content: flex-end;
        }

        &.align#{$breakpoint}-h-space-around {
            justify-content: space-around;
        }

        &.align#{$breakpoint}-h-space-between {
            justify-content: space-between;
        }

        &.align#{$breakpoint}-v-start {
            align-items: flex-start;
        }

        &.align#{$breakpoint}-v-center {
            align-items: center;
        }

        &.align#{$breakpoint}-v-end {
            align-items: flex-end;
        }

        &.align#{$breakpoint}-v-stretch {
            align-items: stretch;
        }
    }
}
@mixin flex($breakpoint: '') {
     @if ($breakpoint != ''){
        $breakpoint: '-#{$breakpoint}';
    }

    .layout-h,
    .layout#{$breakpoint}-h,
    .layout-v,
    .layout#{$breakpoint}-v {
        > .flex#{$breakpoint} {
            flex: 1;
            box-sizing: border-box;

            //override max-rules of all flex-n
            max-width: 100%;
            max-height: 100%;
        }

        &.flex#{$breakpoint} {
            height: 100% !important;
        }

        > .flex#{$breakpoint}-shrink {
            -webkit-flex: 0 1 auto;
            -ms-flex: 0 1 auto;
            flex: 0 1 auto;
            box-sizing: border-box;
        }

        > .flex#{$breakpoint}-grow {
            -webkit-flex: 1 0 auto;
            -ms-flex: 1 0 auto;
            flex: 1 0 auto;
            box-sizing: border-box;
        }

        > .flex#{$breakpoint}-none {
            -webkit-flex: 0 0 auto;
            -ms-flex: 0 0 auto;
            flex: 0 0 auto;
            box-sizing: border-box;
        }
        $i: 0;
        @while $i <= 100 {
            > .flex#{$breakpoint}-#{$i} {
                flex: 1 1 #{$i*1%};
                box-sizing: border-box;
            }

            &.flex#{$breakpoint}-#{$i} {
                height: 100% !important;
            }
            @if $i < 5 {
                $i: $i + 1;
            }
            @else {
                $i: $i + 5;
            }
        }

        > .flex#{$breakpoint}-33 {
            flex: 1 1 33.33%;
            box-sizing: border-box;
        }

        &.flex#{$breakpoint}-33 {
            height: 100% !important;
        }

        > .flex#{$breakpoint}-66 {
            flex: 1 1 66.66%;
            box-sizing: border-box;
        }

        &.flex#{$breakpoint}-66 {
            height: 100% !important;
        }
    }

    .layout-v,
    .layout#{$breakpoint}-v {
        > .flex#{$breakpoint} {
            height: auto;
        }
        $i: 0;
        @while $i <= 100 {
            > .flex#{$breakpoint}-#{$i} {
                max-width: 100%;
                max-height: #{$i*1%};
            }
            @if $i < 5 {
                $i: $i + 1;
            }
            @else {
                $i: $i + 5;
            }
        }

        > .flex#{$breakpoint}-33 {
            max-width: 100%;
            max-height: 33.33%;
        }

        > .flex#{$breakpoint}-66 {
            max-width: 100%;
            max-height: 66.66%;
        }
    }

    .layout-h,
    .layout#{$breakpoint}-h {
        > .flex#{$breakpoint} {
            width: auto;
        }
        $i: 0;
        @while $i <= 100 {
            > .flex#{$breakpoint}-#{$i} {
                max-width: #{$i*1%};
                max-height: 100%;
            }
            @if $i < 5 {
                $i: $i + 1;
            }
            @else {
                $i: $i + 5;
            }
        }

        > .flex#{$breakpoint}-33 {
            max-width: 33.33%;
            max-height: 100%;
        }

        > .flex#{$breakpoint}-66 {
            max-width: 66.66%;
            max-height: 100%;
        }
    }
}
@mixin mixinsForBreakpoints() {
     @each $breakpoint, $minmax in $breakpoints{
        $min: map-get($minmax, min);
        @if (map-has-key($minmax, max)) {
            $max: map-get($minmax, max);
            @media screen and (min-width: $min) and (max-width: $max) {
                 @include layout($breakpoint);
                @include flex($breakpoint);
            }
        }
        @else {
             @media screen and (min-width: $min){
                @include layout($breakpoint);
                @include flex($breakpoint);
            }
        }
    }
}
@include layout;
@include flex;
@include mixinsForBreakpoints;
