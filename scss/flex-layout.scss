@import "mixins";
@mixin flex5($number, $direction) {
    flex: 1 1 #{$number*1%};
    box-sizing: border-box;
    @if ($direction == "v") {
        max-width: 100%;
        max-height: #{$number*1%};
    }
    @else {
        max-width: #{$number*1%};
        max-height: 100%;
    }
}
@mixin flex33($direction) {
    flex: 1 1 33.33%;
    box-sizing: border-box;
    @if ($direction == "v") {
        max-width: 100%;
        max-height: 33.33%;
    }
    @else {
        max-width: 33.33%;
        max-height: 100%;
    }
}
@mixin flex66($direction) {
    flex: 1 1 66.66%;
    box-sizing: border-box;
    @if ($direction == "v") {
        max-width: 100%;
        max-height: 66.66%;
    }
    @else {
        max-width: 66.66%;
        max-height: 100%;
    }
}
@mixin flexPercentage($direction) {
    $i: 0;
    @while $i <= 100 {
        > .flex-#{$i} {
            @include flex5($i, $direction);
        }

        &.flex-#{$i} {
            height: 100% !important;
        }
        @include blubb("> .flex-#{$i}") {
             @include flex5($i, $direction);
        }
        @include blubb("&.flex-#{$i}") {
            height: 100% !important;
        }
        @if $i < 5 {
            $i: $i + 1;
        }
        @else {
            $i: $i + 5;
        }
    }

    > .flex-33 {
        @include flex33($direction);
    }

    &.flex-33 {
        height: 100% !important;
    }
    @include blubb("> .flex-33") {
         @include flex33($direction);
    }
    @include blubb("&.flex-33") {
        height: 100% !important;
    }

    > .flex-66 {
        @include flex66($direction);
    }

    &.flex-66 {
        height: 100% !important;
    }
    @include blubb("> .flex-66") {
         @include flex66($direction);
    }
    @include blubb("&.flex-66") {
        height: 100% !important;
    }
}

%layout {
    display: flex;
    //in main axis
    // justify-content: flex-start;
    //cross main axis
    // align-items: flex-start;
    //how to align when content is wrapped
    // align-content: flex-start;
    &.wrap {
        flex-wrap: wrap;
    }

    &.layout-margin {
        margin: $defaultMarginPadding;

        > * {
            margin: $defaultMarginPadding;
        }
    }

    &.layout-padding {
        padding: $defaultMarginPadding;

        > * {
            padding: $defaultMarginPadding;
        }
    }

    &.layout-fill {
        margin: 0;
        width: 100%;
        min-height: 100%;
    }

    > .flex {
        flex: 1;
        box-sizing: border-box;
    }

    &.flex {
        height: 100% !important;
    }

    > .flex-shrink {
        -webkit-flex: 0 1 auto;
        -ms-flex: 0 1 auto;
        flex: 0 1 auto;
        box-sizing: border-box;
    }

    > .flex-grow {
        -webkit-flex: 1 0 auto;
        -ms-flex: 1 0 auto;
        flex: 1 0 auto;
        box-sizing: border-box;
    }

    > .flex-none {
        -webkit-flex: 0 0 auto;
        -ms-flex: 0 0 auto;
        flex: 0 0 auto;
        box-sizing: border-box;
    }

    &.align-wrap-start {
        align-content: flex-start;
    }

    &.align-wrap-center {
        align-content: center;
    }

    &.align-wrap-end {
        align-content: flex-end;
    }

    &.align-wrap-space-around {
        align-content: space-around;
    }

    &.align-wrap-space-between {
        align-content: space-between;
    }

    &.align-wrap-stretch {
        align-content: stretch;
    }
}
@mixin layout-v() {
    flex-direction: column;

    > .flex {
        height: auto;
    }
    @include flexPercentage("v");

    &.align-h-start {
        align-items: flex-start;
    }

    &.align-h-center {
        align-items: center;
    }

    &.align-h-end {
        align-items: flex-end;
    }

    &.align-h-stretch {
        align-items: stretch;
    }

    &.align-v-start {
        justify-content: flex-start;
    }

    &.align-v-center {
        justify-content: center;
    }

    &.align-v-end {
        justify-content: flex-end;
    }

    &.align-v-space-around {
        justify-content: space-around;
    }

    &.align-v-space-between {
        justify-content: space-between;
    }
}
@mixin layout-h() {
    flex-direction: row;

    > .flex {
        width: auto;
    }
    @include flexPercentage("h");

    &.align-h-start {
        justify-content: flex-start;
    }

    &.align-h-center {
        justify-content: center;
    }

    &.align-h-end {
        justify-content: flex-end;
    }

    &.align-h-space-around {
        justify-content: space-around;
    }

    &.align-h-space-between {
        justify-content: space-between;
    }

    &.align-v-start {
        align-items: flex-start;
    }

    &.align-v-center {
        align-items: center;
    }

    &.align-v-end {
        align-items: flex-end;
    }

    &.align-v-stretch {
        align-items: stretch;
    }
}

// .layout-v {
//     @extend %layout;
//     @include layout-v();
// }
//
// .layout-h {
//     @extend %layout;
//     @include layout-h();
// }

.layout-h-gt-lg,
.layout-h-gt-md,
.layout-h-gt-sm,
.layout-h-gt-xs,
.layout-h-lg,
.layout-h-md,
.layout-h-sm,
.layout-h-xs,
.layout-v-gt-lg,
.layout-v-gt-md,
.layout-v-gt-sm,
.layout-v-gt-xs,
.layout-v-lg,
.layout-v-md,
.layout-v-sm,
.layout-v-xs {
    @extend %layout;
}
// @include blubb(".layout-v") {
//      @include layout-v;
// }
// @include blubb(".layout-h") {
//      @include layout-h;
// }
